// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonApi_SpicyBananas.Database;

#nullable disable

namespace PokemonApi_SpicyBananas.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    [Migration("20240207103308_initial-create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemonApi_SpicyBananas.Models.AbilityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PokemonModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonModelId");

                    b.ToTable("AbilityModels");
                });

            modelBuilder.Entity("PokemonApi_SpicyBananas.Models.PokemonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Height")
                        .HasColumnType("real")
                        .HasColumnName("height");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<byte[]>("SpriteImage")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("spriteImage");

                    b.Property<string>("SpriteUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("spriteUrl");

                    b.Property<float?>("Weight")
                        .HasColumnType("real")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.ToTable("PokemonModels");
                });

            modelBuilder.Entity("PokemonApi_SpicyBananas.Models.TypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PokemonModelId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonModelId");

                    b.ToTable("TypeModels");
                });

            modelBuilder.Entity("PokemonApi_SpicyBananas.Models.AbilityModel", b =>
                {
                    b.HasOne("PokemonApi_SpicyBananas.Models.PokemonModel", null)
                        .WithMany("Abilities")
                        .HasForeignKey("PokemonModelId");
                });

            modelBuilder.Entity("PokemonApi_SpicyBananas.Models.TypeModel", b =>
                {
                    b.HasOne("PokemonApi_SpicyBananas.Models.PokemonModel", null)
                        .WithMany("Types")
                        .HasForeignKey("PokemonModelId");
                });

            modelBuilder.Entity("PokemonApi_SpicyBananas.Models.PokemonModel", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
